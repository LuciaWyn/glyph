@{
   //source: https://www.codeproject.com/Questions/177626/count-number-of-characters-in-a-string
    string str = "abcdab";

//Solution 1 - remove the character, and compare its length.
int result1 = str.Length - str.Replace("a", "").Length;

//Solution 2 - split the string into an array using the character as a delimiter
int result2 = str.Split('a').Length - 1;

//Solution 3 - use the LINQ 'Count' extension method
int result3 = str.ToCharArray().Count(c => c == 'a');

string abc = "adkjddadtyy";
            int Count=0;
           
            int k = Count;
           
            
           bool b = str.AsBool();

           

           
            //String[]pass = str;
            /*
            char C = "fde";
           if (string.IsUpper(D))
           {
              <p>true</p>
           }*/

           string lower = str.ToLower();
           string up = str.ToUpper();
           
           //http://stackoverflow.com/questions/12924337/add-a-custom-class-to-a-project-in-webmatrix
          Class1 test = new Class1();
          var message = test.sayhi();

          //detecting 1
          //Solution 1 - remove the character, and compare its length.
        int result1a = str.Length - str.Replace("1", "").Length;

        //Solution 2 - split the string into an array using the character as a delimiter
        int result1b = str.Split('1').Length - 1;

        //Solution 3 - use the LINQ 'Count' extension method
        int result1c = str.ToCharArray().Count(c => c == '1');
         
         //https://www.asp.net/web-pages/overview/api-reference/asp-net-web-pages-api-reference
         Validator.StringLength(10);

         //own encryption
         string gh = str.Replace("a", "10");
                      }
     

<!DOCTYPE html>

<html lang="en">
    <head>
        <meta charset="utf-8" />
        <title></title>
    </head>
    <body>
        <p>@str</p>
        //usefull for numbers
        <p>@result1</p>
        <p>@result2</p>
        <p>@result3</p>
        <p>@b</p>

        //each number indivally
        <p>Number 1</p>
        <p>@result1a</p>
        <p>@result1b</p>
        <p>@result1c</p>


        //usefull for password length
        <p>@str.Length</p>
        <p>@str.Count(c => c == 'a')</p>

           //usefull for capitals
         @if(str == lower){
             <p>Lower capitals</p>
         }
         @if(str == up){
             <p>All Upper case</p>
         }
          
       

        <p>@message</p>

        //make own algorithm
        <p>@gh</p>
    <script>
       
    </script>
     
    </body>
</html>
